{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "lg",
		"body": [
			"console.log($1);",
			"$2"
		],
		"description": "Log output to console"
	},
	"JSON Stringifiy": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "js",
		"body": [
			"console.log(JSON.stringify($1, null, 2))"
		],
		"description": "Stringify and console log"
	},
  "for loop": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "4l",
		"body": [
			"for (let i = 0; i < $1.length; i++)$2"
		],
		"description": "for loop"
	},
	"map function": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "mp",
		"body": [
			"$1.map(($2,i,a)=> $3)"
		],
		"description": "map all params"
	},
	"filter": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "ft",
		"body": [
			"$1.filter(($2) => $3)"
		],
		"description": "filter element"
	},
	"reduce": {
		"scope": "javascript,typescript,typescriptreact,javascriptreact",
		"prefix": "rd",
		"body": [
			"$1.reduce((a,c)=> $2a + c)"
		],
		"description": "reduce by adding"
	},
}